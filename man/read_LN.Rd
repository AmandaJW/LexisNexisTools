% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_LN.R
\name{read_LN}
\alias{read_LN}
\title{Read in a LexisNexis TXT file}
\usage{
read_LN(x, encoding = "UTF-8", verbose = TRUE, extractParagraphs = TRUE,
  convertDate = FALSE, dateFormat = "\%m.\%d.\%Y")
}
\arguments{
\item{x}{Name or names of LexisNexis TXT file to be converted.}

\item{encoding}{Encoding to be assumed for input files. Defaults to UTF-8 (the LexisNexis standard value).}

\item{verbose}{A logical flag indicating whether information should be printed to the screen.}

\item{extractParagraphs}{A logical flag indicating if the returened object will include a third data frame with paragrahs.}

\item{convertDate}{A logical flag indicating if it should be tried to convert the date of each article into Date format. Fails for non standard dates provided by LexisNexis.}

\item{saveevery}{An integer determining after which number of file reads an interim result is saved as RDS file in the working directory.}
}
\description{
Read a LexisNexis TXT file and convert it to a data frame.
}
\details{
The function can produce a LNoutput S4 object with two data.frame: meta, containing all meta information such as date, author and headline and articles, containing just the article ID and the text of the articles. When extractParagraphs is set to TRUE, the output contains a third data.frame, similar to articles but with articles split into paragraphs.
}
\examples{
LNoutput <- read_LN("myNexisDownload.txt")
meta.df <- LNoutput@meta
articles.df <- LNoutput@articles
paragraphs.df <- LNoutput@paragraphs
Track the time
}
\author{
Johannes B. Gruber
}
\keyword{LexisNexis}
